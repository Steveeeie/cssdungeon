@mixin room-asm(
  $room-size: 400px,
  $texture-wall-top: "wall-top.jpg",
  $texture-wall-sides: "wall-side.jpg",
  $texture-floor-top: "floor-side.jpg",
  $texture-floor-sides: "floor-top.jpg",
  $texture-pillar-top: "pillar-top.jpg",
  $texture-pillar-sides: "pillar-side.jpg"
){

  $floor-depth: 72px;
  $door-size: 64px;
  $pillar-depth: 128px;
  $pillar-thickness: 48px;
  $wall-depth: 116px;
  $wall-height: 36px;
  $wall-width: $room-size - ($pillar-thickness * 2);
  $wall-width-door: ($room-size / 2) - ($door-size / 2) - ($pillar-thickness * 2);
  $snap-edge: ($room-size / 2) - ($pillar-thickness / 2);

  @include pivot;

  .floor{
    @include box(
      $pivot-position: 'top',
      $depth: $floor-depth,
      $height: $room-size,
      $width: $room-size,
      $texture: $texture-floor-top,
      $texture-top: $texture-floor-sides
    );
  }

  .side-front, .side-back{
    @include pivot;
    &:not(.side-door) .wall{
      @include box(
        $pivot-position: 'bottom',
        $depth: $wall-depth,
        $height: $wall-height,
        $width: $wall-width,
        $texture: $texture-wall-sides,
        $texture-top: $texture-wall-top
      );
    }
    &.side-door{
      .wall{
        @include box(
          $pivot-position: 'bottom',
          $depth: $wall-depth,
          $height: $wall-height,
          $width: $wall-width-door,
          $texture: $texture-wall-sides,
          $texture-top: $texture-wall-top
        );
      }
      .wall-left{
        transform: translateX( - (($room-size / 2) - ($wall-width-door /2) - ($pillar-thickness)));
      }
      .wall-right{
        transform: translateX((($room-size / 2) - ($wall-width-door /2) - ($pillar-thickness)));
      }
      .pillar-left{
        transform: translateX( - (($door-size / 2) + ($pillar-thickness / 2)));
      }
      .pillar-right{
        transform: translateX((($door-size / 2) + ($pillar-thickness / 2)));
      }
    }
  }

  .side-left, .side-right{
    @include pivot;
    &:not(.side-door) .wall{
      @include box(
        $pivot-position: 'bottom',
        $depth: $wall-depth,
        $height: $wall-width,
        $width: $wall-height,
        $texture: $texture-wall-sides,
        $texture-top: $texture-wall-top
      );
    }
    &.side-door{
      .wall{
        @include box(
          $pivot-position: 'bottom',
          $depth: $wall-depth,
          $height: $wall-width-door,
          $width: $wall-height,
          $texture: $texture-wall-sides,
          $texture-top: $texture-wall-top
        );
      }
      .wall-left{
        transform: translateY( - (($room-size / 2) - ($wall-width-door /2) - ($pillar-thickness)));
      }
      .wall-right{
        transform: translateY((($room-size / 2) - ($wall-width-door /2) - ($pillar-thickness)));
      }
      .pillar-left{
        transform: translateY( - (($door-size / 2) + ($pillar-thickness / 2)));
      }
      .pillar-right{
        transform: translateY( (($door-size / 2) + ($pillar-thickness / 2)));
      }
    }
  }

  .side-front{
    transform: translateY(-$snap-edge);
  }

  .side-back{
    transform: translateY($snap-edge);
  }

  .side-left{
    transform: translateX(-$snap-edge);
  }

  .side-right{
    transform: translateX($snap-edge);
  }

  .pillar{
    @include box(
      $pivot-position: 'bottom',
      $depth: $pillar-depth,
      $height: $pillar-thickness,
      $width: $pillar-thickness,
      $texture: $texture-pillar-sides,
      $texture-top: $texture-pillar-top
    );
  }

  .pillar-top-left{
    transform: translateY(-$snap-edge) translateX(-$snap-edge);
  }
  .pillar-top-right{
    transform: translateY(-$snap-edge) translateX($snap-edge);
  }
  .pillar-bottom-left{
    transform: translateY($snap-edge) translateX(-$snap-edge);
  }
  .pillar-bottom-right{
    transform: translateY($snap-edge) translateX($snap-edge);
  }

}
